{"version":3,"sources":["webpack:///src/app/login/login.page.html","webpack:///src/app/login/login.module.ts","webpack:///src/app/login/login.page.scss","webpack:///src/app/login/login.page.ts"],"names":["routes","path","component","LoginPageModule","imports","forChild","declarations","LoginPage","route","formBuilder","apiServices","tools","toastController","mobileno","loginForm","group","phone","required","maxLength","pattern","navigate","msg","length","openAlert","isNetwork","openLoader","SendOTP","subscribe","response","closeLoader","res","status","localStorage","setItem","presentAlert","error","console","log","err","openAlertToken","message","selector","template"],"mappings":"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","file":"login-login-module-es5.js","sourcesContent":["export default \"<ion-content>\\n    <div class=\\\"page_block\\\">\\n        <div class=\\\"page_box\\\">\\n            <ion-grid>\\n                <ion-row>\\n                    <ion-col>\\n                        <ion-img class=\\\"logo\\\" Â src=\\\"assets/img/logo.png\\\"></ion-img>\\n                    </ion-col>\\n                </ion-row>\\n                <ion-row>\\n                    <ion-col>\\n                        <ion-label class=\\\"content\\\">Please Enter Your Mobile No. to Receive <br> Verification Code.</ion-label>\\n                    </ion-col>\\n                </ion-row>\\n                <ion-row>\\n                    <ion-col>\\n                        <ion-item class=\\\"form-control\\\">\\n                            <ion-label position=\\\"floating\\\">Mobile Number</ion-label>\\n                            <ion-input [(ngModel)]=\\\"mobileno\\\" type=\\\"tel\\\" maxlength=\\\"10\\\"></ion-input>\\n                        </ion-item>\\n                    </ion-col>\\n                </ion-row>\\n                <ion-row>\\n                    <ion-col>\\n                        <ion-button class=\\\"btn-orange w-100\\\" (click)=\\\"onLoginClick()\\\" shape=\\\"round\\\" expand=\\\"block\\\">SEND OTP</ion-button>\\n                    </ion-col>\\n                </ion-row>\\n                <ion-row>\\n                    <ion-col>\\n\\n                        <ion-label class=\\\"content d-inline\\\" style=\\\"margin-right: 15px;\\\" (click)=\\\"onRegClick()\\\">Don't have an account ? </ion-label>\\n                        <ion-label class=\\\"content d-inline\\\" style=\\\"color: #ef7635 !important; cursor: pointer;\\\" (click)=\\\"onRegClick()\\\" color=\\\"primary\\\"><u>Register</u></ion-label>\\n                    </ion-col>\\n                </ion-row>\\n            </ion-grid>\\n        </div>\\n    </div>\\n</ion-content>\";","import { FormsModule } from '@angular/forms';\nimport { SharedModule } from './../shared/shared.module';\nimport { NgModule } from '@angular/core';\n\n\n\nimport { LoginPage } from './login.page';\nimport { Routes, RouterModule } from '@angular/router';\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n   SharedModule,FormsModule,\n   RouterModule.forChild(routes)\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","export default \"ion-input {\\n  color: black;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFBQTtBQUNKIiwiZmlsZSI6InNyYy9hcHAvbG9naW4vbG9naW4ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWlucHV0IHtcbiAgICBjb2xvcjogYmxhY2s7XG59Il19 */\";","import { Tools } from './../shared/tools';\nimport { Component } from '@angular/core';\nimport { ToastController } from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ApiService } from 'src/app/services/api.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage {\n  mobileno:any = \"\";\n  loginForm: FormGroup;\n\n  constructor(private route: Router,public formBuilder: FormBuilder,\n    private apiServices: ApiService,public tools: Tools,\n    public toastController: ToastController) {\n\n    this.loginForm = this.formBuilder.group({\n      phone: ['',[Validators.required, Validators.maxLength(10),Validators.pattern('[0-9]+')]],\n      //  email: ['pratik.aipl@gmail.com', [Validators.required, Validators.email]],\n      //  password: ['Pratik123', Validators.required],\n    });\n  \n  }\n\n onRegClick() {\n  this.route.navigate(['/register']);\n  }\n\n  onLoginClick() {\n    //console.log(this.mobileno);\n   //this.route.navigate(['/otpverification']);\n\n    //this.route.navigateByUrl('/otpverification/'+this.mobileno);\n\n     // this.tools.openLoader();\n  //  let phone = this.loginForm.get('phone').value;\n\n    var msg = ''\n\n    if (this.mobileno =='') {\n        msg = msg + 'Please enter mobile number<br />'\n      } else if (this.mobileno.length != 10) {\n        msg = msg + 'Please enter valid mobile number<br />'\n      }\n    \n    if (msg != '') {\n      this.tools.openAlert(msg);\n    } else {\n\n      if (this.tools.isNetwork()) {\n        this.tools.openLoader();\n        this.apiServices.SendOTP(this.mobileno).subscribe(response => {\n          this.tools.closeLoader();\n          let res: any = response;\n          //console.log('response ', res.login_token);\n\n          //if(res.status && res.data.user.activated != '0'){\n          if(res.status){\n            //localStorage.setItem('userdata', JSON.stringify(res.data.user));\n            localStorage.setItem('mobileno', this.mobileno);\n            this.route.navigate(['/otpverification']);\n          }else{\n            this.tools.presentAlert('','Something wrong...', 'Ok');\n          }\n        }, (error: Response) => {\n          this.tools.closeLoader();\n          console.log('Error ', error);\n          let err:any = error;\n          this.tools.openAlertToken(err.status, err.error.message);\n    \n        });\n      } else {\n        this.tools.closeLoader();\n      }\n    }\n    }\n\n\n  // async onLoginClick() {\n  //   const toast = await this.toastController.create({\n  //     message: 'This Is Login',\n  //     duration: 2000 ,\n  //     color: 'primary'\n  //   });\n  //   toast.present();\n  // }\n  \n\n}\n"]}