{"version":3,"sources":["webpack:///src/app/otpverification/otpverification.page.html","webpack:///src/app/otpverification/otpverification.module.ts","webpack:///src/app/otpverification/otpverification.page.scss","webpack:///src/app/otpverification/otpverification.page.ts"],"names":["routes","path","component","OtpverificationPageModule","imports","forChild","declarations","OtpverificationPage","router","route","formBuilder","apiServices","tools","mno","otpcode","verificont","localStorage","getItem","console","log","substr","length","msg","openAlert","isNetwork","openLoader","VerificationOTP","subscribe","response","closeLoader","res","status","setItem","token","data","setUserData","navigateByUrl","replaceUrl","presentAlert","error","err","openAlertToken","message","navigate","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACMf,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAcaC,yBAAyB;AAAA;AAAA,O;;AAAzBA,+BAAyB,6DAPrC,+DAAS;AACRC,eAAO,EAAE,CACP,kEADO,EACM,0DADN,EAEP,6DAAaC,QAAb,CAAsBL,MAAtB,CAFO,CADD;AAKRM,oBAAY,EAAE,CAAC,yEAAD;AALN,OAAT,CAOqC,GAAzBH,yBAAyB,CAAzB;;;;;;;;;;;;;;;;ACpBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCYFI,mBAAmB;AAW9B,qCAAoBC,MAApB,EAA2CC,KAA3C,EAAwEC,WAAxE,EACUC,WADV,EACyCC,KADzC,EACuD;AAAA;;AACnD;AACD;AAHiB,eAAAJ,MAAA,GAAAA,MAAA;AAAuB,eAAAC,KAAA,GAAAA,KAAA;AAA6B,eAAAC,WAAA,GAAAA,WAAA;AAC9D,eAAAC,WAAA,GAAAA,WAAA;AAA+B,eAAAC,KAAA,GAAAA,KAAA;AAX3C,eAAAC,GAAA,GAAQ,EAAR,CAWyD,CAVzD;;AAEA,eAAAC,OAAA,GAAc,EAAd;AAEA,eAAAC,UAAA,GAAiB,EAAjB;AAUK,eAAKF,GAAL,GAAUG,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAV;AAGCC,iBAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,KAAKN,GAA/B;AACA,eAAKE,UAAL,GAAgB,kDAAgD,KAAKF,GAAL,CAASO,MAAT,CAAgB,KAAKP,GAAL,CAASQ,MAAT,GAAkB,CAAlC,CAAhE;AAEH;;AAtB6B;AAAA;AAAA,0CAwBd;AAAA;;AACd;AAEA,gBAAIC,GAAG,GAAG,EAAV;;AAGA,gBAAI,KAAKR,OAAL,IAAe,EAAnB,EAAuB;AACrBQ,iBAAG,GAAGA,GAAG,GAAG,yBAAZ;AACD;;AAED,gBAAIA,GAAG,IAAI,EAAX,EAAe;AACb,mBAAKV,KAAL,CAAWW,SAAX,CAAqBD,GAArB;AACD,aAFD,MAEO;AAEL,kBAAI,KAAKV,KAAL,CAAWY,SAAX,EAAJ,EAA4B;AAC1B,qBAAKZ,KAAL,CAAWa,UAAX;AACA,qBAAKd,WAAL,CAAiBe,eAAjB,CAAiC,KAAKZ,OAAtC,EAA8C,KAAKD,GAAnD,EAAwDc,SAAxD,CAAkE,UAAAC,QAAQ,EAAI;AAC5E,uBAAI,CAAChB,KAAL,CAAWiB,WAAX;;AACA,sBAAIC,GAAG,GAAQF,QAAf;;AAGA,sBAAGE,GAAG,CAACC,MAAP,EAAc;AACZf,gCAAY,CAACgB,OAAb,CAAqB,aAArB,EAAoCF,GAAG,CAACG,KAAxC;AACAf,2BAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBW,GAAG,CAACI,IAAJ,CAAS,CAAT,CAAzB,EAFY,CAGZ;;AACA,yBAAI,CAACvB,WAAL,CAAiBwB,WAAjB,CAA6BL,GAAG,CAACI,IAAJ,CAAS,CAAT,CAA7B;;AACA,yBAAI,CAAC1B,MAAL,CAAY4B,aAAZ,CAA0B,OAA1B,EAAmC;AAAEC,gCAAU,EAAE;AAAd,qBAAnC,EALY,CAMb;;AACA,mBAPD,MAOK;AACH,yBAAI,CAACzB,KAAL,CAAW0B,YAAX,CAAwB,EAAxB,EAA2B,oBAA3B,EAAiD,IAAjD;AACD;AACF,iBAfD,EAeG,UAACC,KAAD,EAAqB;AACtB,uBAAI,CAAC3B,KAAL,CAAWiB,WAAX;;AACA,uBAAI,CAACjB,KAAL,CAAWiB,WAAX;;AACAX,yBAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBoB,KAAtB;AACA,sBAAIC,GAAG,GAAOD,KAAd;;AACA,uBAAI,CAAC3B,KAAL,CAAW6B,cAAX,CAA0BD,GAAG,CAACT,MAA9B,EAAsCS,GAAG,CAACD,KAAJ,CAAUG,OAAhD;AAED,iBAtBD;AAuBD,eAzBD,MAyBO;AACL,qBAAK9B,KAAL,CAAWiB,WAAX;AACD;AACF;AACF;AAnE6B;AAAA;AAAA,0CAqEd;AACZ,iBAAKrB,MAAL,CAAYmC,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACD;AAvE2B;AAAA;AAAA,qCAyEnB,CACV;AA1E6B;;AAAA;AAAA,S;;;;gBAVvB;;gBAAQ;;gBADR;;gBAGA;;gBACA;;;;AAOIpC,yBAAmB,6DAL/B,gEAAU;AACTqC,gBAAQ,EAAE,qBADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,gHAFS;;;;AAAA,OAAV,CAK+B,GAAnBtC,mBAAmB,CAAnB","file":"otpverification-otpverification-module-es5.js","sourcesContent":["export default \"<ion-content>\\n    <div class=\\\"page_block\\\">\\n        <div class=\\\"page_box\\\">\\n            <ion-grid>\\n                <ion-row>\\n                    <ion-col>\\n                        <ion-img class=\\\"logo\\\" Â src=\\\"assets/img/logo.png\\\"></ion-img>\\n                    </ion-col>\\n                </ion-row>\\n\\n                <ion-row>\\n                    <ion-col>\\n                        <ion-label class=\\\"content\\\">{{verificont}}</ion-label>\\n                    </ion-col>\\n                </ion-row>\\n\\n                <ion-row>\\n                    <ion-col>\\n                        <ion-item>\\n                            <ion-label position=\\\"floating\\\">Enter OTP</ion-label>\\n                            <ion-input [(ngModel)]=\\\"otpcode\\\" type=\\\"tel\\\" maxlength=\\\"6\\\"></ion-input>\\n                        </ion-item>\\n                    </ion-col>\\n                </ion-row>\\n\\n                <ion-row>\\n                    <ion-col>\\n                        <ion-button class=\\\"btn-orange w-100\\\" (click)=\\\"onSubmitClick()\\\" shape=\\\"round\\\" expand=\\\"block\\\">SUBMIT</ion-button>\\n                    </ion-col>\\n                </ion-row>\\n\\n                <ion-row>\\n                    <ion-col style=\\\"text-align: center;\\\">\\n                        <ion-label style=\\\"cursor: pointer;\\\" (click)=\\\"onResendClick()\\\" color=\\\"primary\\\"><u>Resend?</u></ion-label>\\n                    </ion-col>\\n                </ion-row>\\n\\n            </ion-grid>\\n        </div>\\n    </div>\\n</ion-content>\";","import { SharedModule } from './../shared/shared.module';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { OtpverificationPage } from './otpverification.page';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OtpverificationPage\n  }\n];\n\n@NgModule({\n  imports: [\n    SharedModule,FormsModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [OtpverificationPage]\n})\nexport class OtpverificationPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL290cHZlcmlmaWNhdGlvbi9vdHB2ZXJpZmljYXRpb24ucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastController } from '@ionic/angular';\nimport { ApiService } from '../services/api.service';\nimport { Tools } from '../shared/tools';\n\n@Component({\n  selector: 'app-otpverification',\n  templateUrl: './otpverification.page.html',\n  styleUrls: ['./otpverification.page.scss'],\n})\nexport class OtpverificationPage implements OnInit {\nmno:any='';\n//dotp:any='';\n\notpcode:any = \"\";\n\nverificont:any = \"\";\n\nloginForm: FormGroup;\n\n\n  constructor(private router: Router, public route: ActivatedRoute,public formBuilder: FormBuilder,\n    private apiServices: ApiService,public tools: Tools) { \n      //this.mno = this.route.snapshot.paramMap.get('mno')  \n     // this.dotp = this.route.snapshot.paramMap.get('dotp')  \n\n     this.mno =localStorage.getItem('mobileno');\n\n\n      console.log('params1 =>', this.mno);\n      this.verificont=\"Please Enter Verification Code Send to ******\"+this.mno.substr(this.mno.length - 4)\n\n  }\n\n  onSubmitClick() {\n    //this.router.navigate(['/home']);\n\n    var msg = ''\n\n      \n    if (this.otpcode =='') {\n      msg = msg + 'Please enter OTP <br />'\n    } \n\n    if (msg != '') {\n      this.tools.openAlert(msg);\n    } else {\n\n      if (this.tools.isNetwork()) {\n        this.tools.openLoader();\n        this.apiServices.VerificationOTP(this.otpcode,this.mno).subscribe(response => {\n          this.tools.closeLoader();\n          let res: any = response;\n\n\n          if(res.status){\n            localStorage.setItem('login_token', res.token);\n            console.log('response ', res.data[0]);\n            //localStorage.setItem('userdata', JSON.stringify(res.data[0]));\n            this.apiServices.setUserData(res.data[0])\n            this.router.navigateByUrl('/home', { replaceUrl: true });\n           // this.router.navigate(['/home'], { replaceUrl: true });\n          }else{\n            this.tools.presentAlert('','Something Wrong...', 'Ok');\n          }\n        }, (error: Response) => {\n          this.tools.closeLoader();\n          this.tools.closeLoader();\n          console.log('Error ', error);\n          let err:any = error;\n          this.tools.openAlertToken(err.status, err.error.message);\n    \n        });\n      } else {\n        this.tools.closeLoader();\n      }\n    }\n  }\n\n  onResendClick() {\n      this.router.navigate(['/home']);\n    }\n\n  ngOnInit() {\n  }\n\n}\n"]}